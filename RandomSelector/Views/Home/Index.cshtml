@using RandomSelector.Models.Param
@model RandomSelector.Models.ViewModel.IndexViewModel

@section main {
    @Html.ValidationSummary(false)
    @if (Model.IsPostRequest)
    {
        <table class="table table-condensed" style="margin-bottom: 10px;">
            <tr>
                <th colspan="4">王国カード</th>
            </tr>

            @foreach (var card in Model.GetUseKingdomListAddDisaster().OrderBy(x => x.ExpansionID).ThenBy(x => x.SortOrder).ThenBy(x => x.NameKana))
            {
                <tr class="expansion@(card.ExpansionID.ToString("D"))">
                    <td class="col-xs-3">@card.ExpansionID.ToDisplayName()</td>
                    <td class="col-xs-1">@card.DisplayCost</td>
                    <td class="col-xs-7">@card.Name</td>
                    <td class="col-xs-1">@card.Remark</td>
                </tr>
            }

            @if (Model.UseNotKingdomCardList.Any())
            {
                <tr>
                    <th colspan="4">イベント・ランドマーク</th>
                </tr>
                foreach (var card in Model.UseNotKingdomCardList.OrderBy(x => x.ExpansionID).ThenBy(x => x.SortOrder).ThenBy(x => x.NameKana))
                {
                    <tr class="expansion@(card.ExpansionID.ToString("D"))">
                        <td>@card.ExpansionID.ToDisplayName()</td>
                        <td>@card.DisplayCost</td>
                        <td>@card.Name</td>
                        <td>@(card.Type == CardType.Event ? Const.RemarkEvent : Const.RemarkLandMark)</td>
                    </tr>
                    if (card.CardID == Const.ObeliskCardID)
                    {
                        <tr>
                            <td colspan="4" style="color:gray; font-size:10pt;">（※対象サプライ：@Model.GetObeliskTargetSuuplyCardName()）</td>
                        </tr>
                    }
                }
            }

            @if (Model.DarkMarketCardList != null && Model.DarkMarketCardList.Any())
            {
                <tr>
                    <th colspan="4">闇市場デッキ</th>
                </tr>
                foreach (var card in Model.DarkMarketCardList.OrderBy(x => x.ExpansionID).ThenBy(x => x.SortOrder).ThenBy(x => x.NameKana))
                {
                    <tr class="expansion@(card.ExpansionID.ToString("D"))">
                        <td>@card.ExpansionID.ToDisplayName()</td>
                        <td>@card.DisplayCost</td>
                        <td colspan="2">@card.Name</td>
                    </tr>
                }
            }
        </table>
        <div id="itemArea" class="optionItem">
            <button class="btn btn-xs @(Model.IsUseColony ? "btn-success" : "btn-default")" disabled="@(!Model.IsUseColony)">白金貨・植民地</button>
            <button class="btn btn-xs @(Model.IsUseShelter ? "btn-success" : "btn-default")" disabled="@(!Model.IsUseShelter)">避難所</button>
            @foreach (var item in EnumUtil.GetDisplayValues<ItemCode>().OrderBy(x => x.GetDisplayAttr()?.GetOrder() ?? 0))
            {
                var isUse = Model.IsUseItem(item);
                <button class="btn btn-xs @(isUse ? "btn-success" : "btn-default")" disabled="@(!isUse)">@item.ToDisplayName()</button>
            }
        </div>
        if (Model.Param.ExpansionIDList.Contains(ExpansionID.Nocturne))
        {
            <div id="heirloomArea" class="optionItem">
                @foreach (var item in EnumUtil.GetDisplayValues<Heirloom>().OrderBy(x => x))
                {
                    <button class="btn btn-xs @(Model.UseHeirlooms.Contains(item) ? "btn-success" : "btn-default")" disabled="@(!Model.UseHeirlooms.Contains(item))">@item.ToDisplayName()</button>
                }
            </div>
        }
    }

    @using (Html.BeginForm())
    {
        <hr />
        <input type="submit" class="btn btn-primary btn-block btn-lg center-block" value="実行" />
        <table id="expansionArea" class="table table-condensed" style="margin-top: 3px; margin-bottom: 0; width: auto;">
            <tr>
                <th>拡張名</th>
                <th>使用</th>
                <th>優先</th>
                <td style="padding: 0;" rowspan="@(Enum.GetValues(typeof(ExpansionID)).Length - 1)">
                    <div id="helpBtnArea" style="margin: 15px 0 5px 5px; width: 100px;">
                        <button class="btn btn-xs btn-default" id="allExpansionSelect">全拡張選択</button>
                        <button class="btn btn-xs btn-default" id="allExpansionClear">全拡張クリア</button>
                        <br />
                        <button class="btn btn-xs btn-default" id="priorityClear">優先クリア</button>
                    </div>
                </td>
            </tr>
            @foreach (var item in EnumUtil.GetDisplayValues<ExpansionID>())
            {
                <tr>
                    <td style="padding-right: 10px;"><label style="font-weight: normal;">@item.ToDisplayName()</label></td>
                    <td style="text-align:center;">
                        <input type="checkbox" name="@nameof(Model.Param.ExpansionIDList)" value="@item" checked="@(Model.Param.ExpansionIDList.Contains(item))" data-toggle="toggle" data-size="mini" data-onstyle="success" data-on="○" data-off="×" />
                    </td>
                    @if (item != ExpansionID.Promotion)
                    {
                        <td style="text-align:center;">@Html.RadioButton(nameof(Model.Param.PriorityExpansion), item, (item == Model.Param.PriorityExpansion), new { id = "" })</td>
                    }
                    else
                    {
                        <td colspan="2" style="padding: 0;">
                            <div id="promCard" style="@(Model.Param.ExpansionIDList.Any(x => x == ExpansionID.Promotion) ? "" : "display:none;")">
                                @foreach (var prom in Model.PromCardList)
                                {
                                    <div class="promItem">
                                        <input type="checkbox" name="@nameof(IndexParam.SelectedPromCardID)" value="@prom.CardID" checked="@Model.Param.SelectedPromCardID.Contains(prom.CardID)" data-toggle="toggle" data-size="mini" data-onstyle="success" data-on="○" data-off="×" />
                                        <label>@prom.Name</label>
                                    </div>
                                }
                            </div>
                        </td>
                    }
                </tr>
            }
        </table>

        <h3>【詳細設定】</h3>
        <div id="detailSettings">
            <div class="">
                <input type="checkbox" id="@nameof(IndexParam.IsWeightingAlchemy)" name="@nameof(IndexParam.IsWeightingAlchemy)" value="true" checked="@Model.Param.IsWeightingAlchemy" data-toggle="toggle" data-size="mini" data-onstyle="success" />
                <label>錬金術重み付け</label>
            </div>
        </div>
        <input type="submit" class="btn btn-primary btn-block btn-lg center-block" value="実行" />
    }
}

@section footerJS {
    @Scripts.Render("~/bundles/myscript")
}
